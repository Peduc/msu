%{
Используя схемы ERK1 и ERK2, смоделируйте движение Земли вокруг Солнца в течение года. 
Для начала можете считать Солнце неподвижным 
(т.е. решать задачу о движении материальной точки в центральном поле силы). 

Данные (конечно, в системе СИ), которые я нашёл в Интернете, следующие: 
(небесные тела даны с запасом для выполнения последующих заданий) 

% Заданы: Солнце, Земля, Луна (Земля в афелии, для Луны взяты средние данные), комета Галлея 
mass = [1.9891*10^30; 5.9736*10^24; 7.3477*10^22; 2.2*10^14]; 
coordinates = [0 0; 1.52098232*10^11 0; 1.52098232*10^11+3.84467*10^8 0; 5.24824*10^12 0]; 
velocities = [0 -0.089021687078894; 0 29270; 0 29270+1023; 0 -900]; 

% Гравитационная постоянная 
g = 6.67300*10^(-11); 

Если для Луны найдёте более точные данные 
(например расстояние до земли и соответствующую скорость в апогее или перигее), 
то буду благодарен, если вы их здесь опубликуете. 

Хочу лишний раз отметить, что, понятное дело, 
без вычисления апостериорных оценок точностей полученного решения ваша программа
по сути будет являться генератором случайных чисел. 
Убедиться в том, что всё вами реализовано правильно вы сможете наглядно,
используя априорную информацию о том, что через 1 год Земля должна вернуться 
в ту же самую точку пространства. Но также убедитесь и в том, что результат сильно зависит 
от выбранного шага по времени - в случае неудачного шага Земля может, например, 
набрать 3-ю космическую скорость и покинуть солнечную систему. 
%}
 clear; clc;

mass = [1.9891*10^30; 5.9736*10^24]; %Солнце/Земля
coordinates = [0 0; 1.52098232*10^11 0]; %x,y Солнца ; x,y Земли 
velocities = [0 -0.089021687078894; 0 29270]; %Vx,Vy Солнца; vx, Vy Земли
G = 6.67300*10^(-11); % Гравитационная постоянная 
N=100;
tau=365*24*60*60/N;
s=3;

if s==1
b=1;
c=1/2;
a=0;
elseif s==2
b=[1/4 3/4];
c=[0 2/3];
a=2/3;
elseif s==3
b=[2/9 1/3 4/9];
c=[0 1/2 3/4];
a=[1/2 0;3/4 0];
end

w=zeros(s,4);
U=zeros(N+1,4);
U(1,:)=[coordinates(2,1) coordinates(2,2) velocities(2,1) velocities(2,2)];

for n=1:N
    sum2=zeros(1,4);
    for k=1:s
        
        w(k,:)=f(U);
        
        sum1=zeros(1,4);
        for l=1:k-1
            sum1=sum1+a(l)*w(l,:);
        end
        
        w(k,:)=f( U(n,:)+tau*sum1 )';
        sum2=sum2+b(k)*w(k,:);
    end
     U(n+1,:)=U(n,:)+tau*sum2;
   
    
end

X=U(:,1);
Y=U(:,2);

plot(X,Y);






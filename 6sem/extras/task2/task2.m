%{
1. Реализовать схемы ERK2 и ERK3 для системы Солнце-Земля, и смоделировать эволюцию этой системы в течение года.  

2. Обобщить задание пункта 1 на тот случай, когда Солнце не закреплено.

3. Реализовать методику Ричардсона рекуррентного повышения точности и асимптотических
 точного выполнения апостериорных оценок погрешности.

4. Реализовать построение адаптивных сеток с помощью автоматики выбора шага.
 Для этих целей прошу рассмотреть задачу движения кометы Галлея вокруг Солнца в двух вариациях:
 1) Солнце закреплено в начале координат, другие тела кроме кометы Галлея отсутствуют,
 2) Солнце и другие тела (Земля и Луна) присутствуют и не закреплены.

4.1. Смоделируйте поведение системы Солнце - комета Галлея (начальное положение в афелии)
 и сделайте вычисления в следующих двух вариантах:
 1) с постоянным шагом (10 дней) в течение 1 периода обращения (75,3 лет);
 2) с автоматикой выбора шага* (начальный шаг - 10 дней) в течении 1 периода обращения;
 3) с переходом к длине дукги. Сравните точность (зрительно на основании графиков траекторий)
    и число шагов в обоих случаях.

* автоматику выбора шага реализуйте как с помощью локального сгущения сетки
, делая вычисления с помощью схемы ERK4, так и с помощью вложенных схем,
  делая вычисления с помощью схемы ERK3 и соответствующей вложенной ERK2.

4.2. Добавьте комету Галлея в систему Солнце - Земля - Луна и проведите аналогичные вычисления.

4.3.. Реализуйте смешанную стратегию вычислений с контролем точности:
 т.е. сначала с помощью автоматики выбора шага сформируйте адаптивную сетку,
 а затем рекуррентно сгустите её по

%}

 clear; clc;

mass = [1.9891*10^30; 5.9736*10^24]; %Солнце/Земля
coordinates = [0 0; 1.52098232*10^11 0]; %x,y Солнца ; x,y Земли 
velocities = [0 -0.089021687078894; 0 29270]; %Vx,Vy Солнца; vx, Vy Земли
G = 6.67300*10^(-11); % Гравитационная постоянная 
N=10^5;
tau=10*365*24*60*60/N;
s=2;

if s==1
b=1;
c=1/2;
a=0;
elseif s==2
b=[1/4 3/4];
c=[0 2/3];
a=2/3;
elseif s==3
b=[2/9 1/3 4/9];
c=[0 1/2 3/4];
a=[1/2 0;3/4 0];
end

w=zeros(s,8);
U=zeros(N+1,8);
U(1,:)=[coordinates(2,1) coordinates(2,2) velocities(2,1) velocities(2,2) coordinates(1,1) coordinates(1,2) velocities(1,1) velocities(1,2)];

for n=1:N
    sum2=zeros(1,8);
    for k=1:s
        
        w(k,:)=f(U);
        
        sum1=zeros(1,8);
        for l=1:k-1
            sum1=sum1+a(l)*w(l,:);
        end
        
        w(k,:)=f( U(n,:)+tau*sum1 )';
        sum2=sum2+b(k)*w(k,:);
    end
     U(n+1,:)=U(n,:)+tau*sum2;
   
    
end

Xe=U(:,1);
Ye=U(:,2);

Xs=U(:,5);
Ys=U(:,6);

figure(1);
plot(Xe, Ye);

figure(2);
plot(Xs, Ys);





